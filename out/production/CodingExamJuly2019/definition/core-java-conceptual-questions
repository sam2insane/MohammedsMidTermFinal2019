Please answer the below core-java Questions:

What is programing language?
A. programming language is basically set of commands, instructions, and other syntax that we can use to create a software program


What jdk contains or composed of and define each components?
A. JDK contains



What is IDE?
A. IDE stands for Integrated development Environment.

What are the IDEs available in the market to support java?
A. some available IDEs currently available on the markets are intellij, eclipse, netBeans,etc.


Explain the entire java life cycle.
A. life cycle of java mainly consists of 3 stages. Editing the program, compiling the source code and last step is to execute.
initially the first step is to write the a java code in an editor or in an IDEA (integrated development Environment). for our case it is
intellij. the code that's written is called a source code that gets saved in source file. we need to make sure to save the file with .java extension (eg. xxx.java)
the next step is to compile the source code in other words we are translating it into bytecode. the last step is to execution. the bytecode will be executed using JVM
(java virtual machine).

what is class?
A. A class is a blueprint of an object
What is object?
A. An object is an instance of a class often used to model real-world objects.

What is the entry point of an application?
A. the main method public static void main (String [] args) (psvm in short)

Why main is static?
A. Static means you can call the function without having to instantiate an object/instance of a class. main needs to be static  because main() is called
by the JVM before any objects are made. JVM can then call it without creating any instance of class which contains main method.

Which class is the superclass of all classes?
A. the object class.

What is difference between path and classpath variables?
A. Path - path variable is used to set the path for all java software tools such as  javac.exe, java.exe, javadoc.exe, and so on.
Class path - is a system envrioment variable used by the java compiler and JVM. (JVM use the class path to determine the location of required class files.)

What is the difference between an Interface and Abstract class?
A. in an interface, you can only have abstract methods and Abstract class can have both abstract and non-abstract method.

Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
A. Interface and abstract classes cannot be instantiated. the only way we can use them is for another class to
implement a interface or extend a abstract class.

what is Access Specifier?
A. java access specifier is a keyword to restrct the scope of class constructor variable or other datas. access specifier can specify which classes can
access a given class and its field. there are four types of access specifier default (no key required), public, private and protected.

What is OOP ? Define each feature of java OOP.
A. OOP stands for objects oriented programming. all ajva applications are based on the concept of objects. features of OOP is
Inheritance: this is when you make a new class using other existing classes. when u inherit from other existing class. you can use its methods and then
create more of yours if need be.
Abstraction: this is basically providing essential information about the data and hiding unnecessary implementing details.
Polymorphism: to understand Poly means many forms. similar to this Polymorphism in oop basically means we can perform a single action is different ways based on
their data type.
Encapsulation: is basically binding the data with the code that manipulates them. it keeps the data and code safe from external interferences.

What is Java Package and which package is imported by default?
A. a package is simply a folder or directory that keeps related classes and applications for easy access. java.lang and unnamed package is imported by default.

What is API? Name list of API that you have used so far.
A. API stands for Application programming interface, it is essentially a list of classes that are part of the jdk
list of API that we have use dso far are String, Arraylist and HaspMap etc.

Does java support multiple inheritance, explain why or why not?
A. No, Java does not allow multiple inhertance. only one parent can be inherited from. however we can go around it by
What is method overloading and when it happens?

-Explain exceptions in java and how to handle it.
A.exceptions are any event that disrupt the natural flow of an application, but can be handled without the need to
 terminate the application. You can handle an exception with a try catch block or throws keyword.

-What is static keyword in java? How it has been used in variables and methods ?
A. the static keyword indicates that a member belongs to a class rather than a object. static variables are shared by all objects
and static methods can be accessed without needing a object reference

-What is final and how it has been used variables and methods?
A. the final keyword indicates that a member cannot be changed once declared. a final variabe cannot be changed
and a final method cannot be overriden

-What is final, finally and finalize?
A. finally is a block of code that executes after a try catch block for code cleanup,
finalize is a method called by java garbage collector that closes any open resources before destroying a object

-What is a constructor ?
A. a constructor is used to create an object

-Can we have multiple constructors in a class?
A.Yes But different parameters.

-If we don't have a constructor declared, what is called during the object creation?
A. the default constructor is called

-What is "this" keyword in java ?
A. the this keyword is used to reference the current object whose method is being called

-What is "super" keyword in java? How many possible way can you use?
A. the super keyword is a reference to the parent class of an object

-What is JVM stand for ?
A. JVM stands for java virtual Machine

-Is JVM platform independent?
A.Yes

-What version of java are you using?
A. Version 1.8

-What is JAR stand for ?
A.java archive

-What is the difference between JDK and JVM?
A.jdk stores all the tools and files need by java to run properly, Jvm is the executioner of java bte code

-What is the difference between JVM and JRE?
A.jvm is the virtual machine that executes bytecode it is inside JRE which contains other libraries and components needed to
 run java aplications

-What is compile time and run time?
A. compile time is the stage when source code converted to byte code, runtime is when the byte code is being executed

-What is heap?
A.heap is a section of ram in which all objects are stored

-How java manage it's memory?
A. all references are stored in stack, all objects are stored in heap

-What is the difference between String, StringBuffer and StringBuilder?
A.String is immutable stringBuffer and stringBuilder are not, stringBuffer is thread safe, StringBuilder is not

-What is Singleton class?
A. a singleton class is a class that allows only one instance object to be created

-What is Serialization and Deserialization?
A. serialization is the process of converting objects to bytestream, Deserialization is the opposite process

-when to use transient variable in java?
A. when we do not want a variable to serialized

-Difference between while and do..while loop?
A. do while will execute atleast once, whileloop will not execute if a condition is not met

-What is Enum?
A. enum is a set of constants that are user defined

-What is Iterator?
A. iterator is a method of the Iterable interface that is used to traverse over a collection

-Which one will take more memory, an int or Integer?
A. an integer will take more memory because it is a object

-Why is String Immutable in Java?
A.Strings are immutable because we cannot change their states once they are instantiated

-What is constructor chaining in Java?
A. Constructor chaining is the process of calling one constructor from another constructor with respect to current object.

-The difference between Serial and Parallel Garbage Collector?
A. serial GC is used for single threaded environments, while Parallel GC is used in multithreaded environments

-What is JIT stands for?
A. The Just-In-Time (JIT) compiler is a component of the Java Runtime Environment that improves the performance of Java applications at run time.

-Explain Java Heap space and Garbage collection?
A.Heap space is the section of memory where objects are stored, Garbage collection clears the heap of any objects that are not being used

-Can you guarantee the garbage collection process?
A. in java garbage collection is automatic but it cannot be forced and it is not clear when the collection will occur

-What is the difference between stack and heap in Java?
A. stacks hold object references  and local primitive variables, heaps store the actual objects

-What is reflection in java and why is it useful?
A. Reflection gives us information about the class to which an object belongs and also the methods of that class which can be executed by using the object.
One very common use case in Java is the usage with annotations. JUnit 4, for example, will use reflection to look through your classes for methods tagged
with the @Test annotation, and will then call them when running the unit test.

-what is multithreading in java?
A.Multithreading is a Java feature that allows two or more parts of a program to run at the same time  for maximum utilization of CPU.

-What is the use of synchronization in Java?
A.we use synchronization to allow only one thread to access a cpu resource at a time.

-What is Framework?
A. a framework is a large body of files or classes that we can add to our own code in order to solve a need

-What are the testing Framework available in java?
A. the main two are testng and Junit

-Difference between jUnit and testNG?.
A. testng has all the features of junit plus added features such as dependency testing, group testing,object testing,

-What are the dependencies for this project?
A.There are multipul dependenciesi am using for this project
ex..mysql connector,mongoDB CONNECTOR, json jar, testNG etc...

-what is dependency injection in java?
A.dependency injection is when a object conatians the dependencies of another object and is passed to it so that it can use it

-What is static binding and dynamic binding?
A.static binding refers to the calls that can be resolved at compilation time while, dynamic binding are the calls that can be resolved
 only at runtime
